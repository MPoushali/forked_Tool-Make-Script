SHELL := /bin/bash
export ROOT_DIR=${PWD}

EXIT_SWITCH := exit
RUN_DIR := $(ROOT_DIR)/par
TOP_MODULE := design_top
DATABASE_DIR := $(RUN_DIR)/bd
WORK_DIR := $(RUN_DIR)/work
REPORT_DIR := $(RUN_DIR)/reports
SOURCE_DIR := $(ROOT_DIR)/rtl
LIB_DIR := $(ROOT_DIR)/libs

DC_SETUP_TCL := $(RUN_DIR)/dc_setup.tcl
DC_REPORTS_TCL := $(RUN_DIR)/dc_reports.tcl
DC_CTL_TCL := $(RUN_DIR)/dc_constrain.tcl
DC_PRE_DFT_TCL := $(RUN_DIR)/dc_pre_dft.tcl
DC_RUN_DFT_TCL := $(RUN_DIR)/dc_run_dft.tcl
DC_RUN_TCL := $(RUN_DIR)/dc_compile.tcl
DC_RUN_LOG := $(RUN_DIR)/dc_compile.log
DC_PRE_DFT_LOG := $(RUN_DIR)/dc_pre_dft.log
DC_RUN_DFT_LOG := $(RUN_DIR)/dc_run_dft.log

FILE_LIST := $(ROOT_DIR)/Libmap
FILE_LIST_PL := $(RUN_DIR)/file_list.pl
FILE_LIST_TCL := $(RUN_DIR)/file_list.tcl

LINK_LIBRARY := * core_typ.db
TARGET_LIBRARY := core_typ.db
SYMBOL_LIBRARY := core.sdb

#Create user defined variables
CLK_PORT := clk
CLK_PERIOD := 4.00
CLK_SKEW := 0.14
WC_OP_CONDS := typ_0_1.98
WIRELOAD_MODEL := 10KGATES
DRIVE_CELL := buf1a6
DRIVE_PIN := {Y}
MAX_OUTPUT_LOAD := [load_of ssc_core/buf1a2/A]
INPUT_DELAY := 2.0
OUTPUT_DELAY := 0.5
MAX_AREA := 380000

DFT_CLK_PERIOD := 100
DFT_CLK_PORT := TCLK
DFT_RST_PORT := TRST
DFT_TM_PORT := TMS
DFT_DI_PORT := TDI
DFT_DO_PORT := TDO
SCAN_CHAIN_COUNT := 1

VCDPLUSON := 1
ifeq ($(VCDPLUSON),1)
  DUMP_OPTION = vcdpluson
  DUMMP_FILE = vcdplus.vpd
else
  DUMP_OPTION = dumvars
  DUMMP_FILE = verilog.dump
endif

run: clean syn

src:
  @mkdir $(RUN_DIR);
  @mkdir $(DATABASE_DIR);
  @mkdir $(WORK_DIR);
  @mkdir $(REPORT_DIR);
  
$(FILE_LIST_PL): $(FILE_LIST)
  @echo "#! /usr/bin/perl" > $@
  @echo "use warnings;" >> $@
  @echo "use strict;" >> $@
  @echo "my \$$HFILE = \"$(FILE_LIST)\";" >> $@
  @echo "my \$$CFILE = \"$(FILE_LIST_TCL)\";" >> $@
  @echo "open(HFILEptr,\$$HFILE) || die \"Can't open file: \$$HFILE\\n\";" >> $@
  @echo "open(CFILEptr,\">\$$CFILE\") || die \"Can't open file: \$$CFILE\\n\";" >> $@
  @echo "while(<HFILEptr>) {" >> $@
  @echo " \$$_ =~ s/^\s+\$$//g;" >> $@
  @echo " chomp;" >> $@
  @echo " if (/^.*#(.*)/) {" >> $@
  @echo "   print(CFILEptr \"## \$$_\\n\");" >> $@
  @echo " }" >> $@
  @echo " elsif (/^.*.(sv|svg|svh)*/) {" >> $@
  @echo "   print(CFILEptr \"analyze -f sverilog \$$_\\n\");" >> $@
  @echo " }" >> $@
  @echo " elsif (/^.*.(v|vg|vh)*/) {" >> $@
  @echo "   print(CFILEptr \"analyze -f verilog \$$_\\n\");" >> $@
  @echo " }" >> $@
  @echo " else (/^.*.(v|svg|svh)*/) {" >> $@
  @echo "   print(CFILEptr \"## \$$_\\n\");" >> $@
  @echo " }" >> $@
  @echo "}" >> $@
  @echo "close(HFILEptr);" >> $@
  @echo "close(CFILEptr);" >> $@
  
$(DC_SETUP_TCL):
  @echo "set_host_options -max_cores 16" > $@
  @echo "set cache_read \"\"" >> $@
  @echo "set cache_write \"\"" >> $@
  @echo "set search_path \"\$$search_path $(LIB_DIR) $(DATABASE_DIR) ./\"" >> $@
  @echo "set link_library \"$(LINK_LIBRARY)\"" >> $@
  @echo "set target_library \"$(TARGET_LIBRARY)\"" >> $@
  @echo "set symbol_library \"$(SYMBOL_LIBRARY)\"" >> $@
  @echo "define_design_lib WORK -path \"$(WORK_DIR)\"" >> $@

$(DC_REPORTS_TCL):
  @echo "report_timing -transition_time -nets -attributes -nosplit > $(REPORT_DIR)/$(TOPMODULE)_\$${report_type}_timming.rpt" > $@
  @echo "report_area -nosplit -hierarchy > $(REPORT_DIR)/$(TOPMODULE)_\$${report_type}_area.rpt" >> $@
  @echo "report_power -nosplit -hierarchy > $(REPORT_DIR)/$(TOPMODULE)_\$${report_type}_power.rpt" >> $@
  @echo "report_reference -nosplit -hierarchy > $(REPORT_DIR)/$(TOPMODULE)_\$${report_type}_reference.rpt" >> $@
  @echo "report_resources -nosplit -hierarchy > $(REPORT_DIR)/$(TOPMODULE)_\$${report_type}_resources.rpt" >> $@
  @echo "report_constraints > $(REPORT_DIR)/$(TOPMODULE)_\$${report_type}_constraints.rpt" >> $@
  @echo "report_design > $(REPORT_DIR)/$(TOPMODULE)_\$${report_type}_design.rpt" >> $@
  @echo "report_hierarchy > $(REPORT_DIR)/$(TOPMODULE)_\$${report_type}_hierarchy.rpt" >> $@
  @echo "report_clock > $(REPORT_DIR)/$(TOPMODULE)_\$${report_type}_clock.rpt" >> $@
  @echo "report_clock_gating > $(REPORT_DIR)/$(TOPMODULE)_\$${report_type}_clock_gating
  @echo "write_script -format dctcl -output > $(REPORT_DIR)/$(TOPMODULE)_\$${report_type}.tcl" >> $@.rpt" >> $@
  
$(DC_RUN_TCL): $(DC_SETUP_TCL) $(DC_REPORTS_TCL) $(DC_CTL_TCL) $(FILE_LIST_PL)
  @echo "source $(DC_SETUP_TCL)" > $@
  # Transilate HDL to intermediate format
  @echo "source $(FILE_LIST_TCL)" >> $@
  # Build generic technology datbase
  @echo "elaborate $(TOPMODULE)" >> $@
  # designate the design to synthesize
  @echo "current_design $(TOPMODULE)" >> $@
  @echo "uniquify" >> $@
  @echo "source $(DC_CTL_TCL)" >> $@
  @echo "check_design" >> $@
  @echo "write -format ddc -heirarchy -output $(DATABASE_DIR)/$(TOPMODULE)_gtech.ddc" >> $@
  @echo "write -format verilog -heirarchy -output $(DATABASE_DIR)/$(TOPMODULE)_gtech.v" >> $@
  # compile the design
  @echo "compile" >> $@
  @echo "write -format ddc -heirarchy -output $(DATABASE_DIR)/$(TOPMODULE)_mapped.ddc" >> $@
  @echo "write -format verilog -heirarchy -output $(DATABASE_DIR)/$(TOPMODULE)_mapped.v" >> $@
  @echo "write_sdf $(RUN_DIR)/$(TOPMODULE)_mapped.sdf" >> $@
  @echo "write_sdc -nosplit $(RUN_DIR)/$(TOPMODULE)_mapped.sdc" >> $@
  @echo "write_milkyway -overwrite -output \"$(RUN_DIR)/$(TOPMODULE)_mapped_DCT\"" >> $@
  # generate reports
  @echo "set report_type mapped" >> $@
  @echo "source $(DC_REPORTS_TCL)" >> $@
  # ultra compile
  @echo "compile_ultra -gate_clock -no_autoungroup" >> $@
  @echo "write -format ddc -heirarchy -output $(DATABASE_DIR)/$(TOPMODULE)_ultra_mapped.ddc" >> $@
  @echo "write -format verilog -heirarchy -output $(DATABASE_DIR)/$(TOPMODULE)_ultra_mapped.v" >> $@
  @echo "write_sdf $(RUN_DIR)/$(TOPMODULE)_ultra_mapped.sdf" >> $@
  @echo "write_sdc -nosplit $(RUN_DIR)/$(TOPMODULE)_ultra_mapped.sdc" >> $@
  @echo "write_milkyway -overwrite -output \"$(RUN_DIR)/$(TOPMODULE)_ultra_mapped_DCT\"" >> $@  @echo "set report_type mapped" >> $@
  # generate reports
  @echo "set report_type ultra_mapped" >> $@
  @echo "source $(DC_REPORTS_TCL)" >> $@

  
