SHELL ?= /bin/bash
export ROOT_DIR=${PWD}

TOP_MODULE ?= design_top
RUN_DIR ?= $(ROOT_DIR)/lint

SG_RUN_TCL ?= $(RUN_DIR)/sg_compile.tcl
SG_RUN_LOG ?= $(RUN_DIR)/sg_compile.log
SG_METHODOLOGY ?= \$$SPYGLASS_HOME/GuideWare2.0/block/rtl_handoff
SG_GOAL_LIST ?= lint/lint_rtl \
                lint/lint_abstract \
                adv_lint/adv_lint_struct \
                adv_lint/adv_lint_verify
                
FILE_LIST ?= $(ROOT_DIR)/Libmap
FILE_LIST_PL ?= $(RUN_DIR)/file_list.pl
FILE_LIST_TCL ?= $(RUN_DIR)/file_list.tcl

run: clean lint

src:
  @mkdir $(RUN_DIR);
  
$(FILE_LIST_PL): $(FILE_LIST)
  @echo "#! /usr/bin/perl" > $@
  @echo "use warnings;" >> $@
  @echo "use strict;" >> $@
  @echo "my \$$HFILE = \"$(FILE_LIST)\";" >> $@
  @echo "my \$$CFILE = \"$(FILE_LIST_TCL)\";" >> $@
  @echo "open(HFILEptr,\$$HFILE) || die \"Can't open file: \$$HFILE\\n\";" >> $@
  @echo "open(CFILEptr,\">\$$CFILE\") || die \"Can't open file: \$$CFILE\\n\";" >> $@
  @echo "while(<HFILEptr>) {" >> $@
  @echo " \$$_ =~ s/^\s+\$$//g;" >> $@
  @echo " chomp;" >> $@
  @echo " if (/^.*#(.*)/) {" >> $@
  @echo "   print(CFILEptr \"## \$$_\\n\");" >> $@
  @echo " }" >> $@
  @echo " elsif (/^.*\.(sgcd)\$$/) {" >> $@
  @echo "   print(CFILEptr \"read_file -type sgdc \$$_\\n\");" >> $@
  @echo " }" >> $@
  @echo " elsif (/^.*\.(vhd|vhdl)\$$/) {" >> $@
  @echo "   print(CFILEptr \"read_file -type vhdl \$$_\\n\");" >> $@
  @echo " }" >> $@
  @echo " elsif (/^.*\.(sv|v|vg|vh)\$$/) {" >> $@
  @echo "   print(CFILEptr \"read_file -type verilog \$$_\\n\");" >> $@
  @echo " }" >> $@
  @echo " else {" >> $@
  @echo "   print(CFILEptr \"## \$$_\\n\");" >> $@
  @echo " }" >> $@
  @echo "}" >> $@
  @echo "close(HFILEptr);" >> $@
  @echo "close(CFILEptr);" >> $@

$(SG_RUN_TCL): $(FILE_LIST_PL)
  @echo "new_project $(TOP_MODULE)_new.prj -projectwdir $(RUN_DIR)" >> $@
  @echo "source $(FILE_LIST_TCL)" >> $@
  @echo "set_option language_mode mixed" >> $@
  @echo "set_option enableSV yes" >> $@
  @echo "set_option top $(TOP_MODULE)" >> $@
  @echo "current_methodology $(SG_METHODOLOGY)" >> $@
  @echo "write_report goal_summary > $(RUN_DIR)/$(TOP_MODULE)_goal_summary_init.rpt" >> $@
  @echo "link_design -force" >> $@
  @echo "compile_design -force -top $(TOP_MODULE)" >> $@
  @echo "set goal_list [list $(SG_GOAL_LIST)]" >> $@
  @echo "run_goal -goal \$${goal_list}" >> $@
  @echo "write_report goal_summary > $(RUN_DIR)/$(TOP_MODULE)_goal_summary_final.rpt" >> $@
  @echo "write_aggregate_report project_summary -reportdir $(RUN_DIR)/$(TOP_MODULE)" >> $@
  @echo "exit -save -force" >> $@

lint: src $(SG_RUN_TCL)
  @perl $(FILE_LIST_PL);
  @sg_shell -tcl $(SG_RUN_TCL) -shell_log_file $(SG_RUN_LOG)

clean:
  @rm -rf $(RUN_DR)
  
